// <auto-generated />
using System;
using AzureBootCamp.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AzureBootCamp.Migrations
{
    [DbContext(typeof(AZBootcamp2021DBContext))]
    [Migration("20220408052912_gavmigration")]
    partial class gavmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AzureBootCamp.Context.SessionLink", b =>
                {
                    b.Property<int>("SessionLinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SessionLinkValue")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("SessionTime")
                        .HasColumnType("datetime");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("SessionLinkId");

                    b.HasIndex("TrackId");

                    b.ToTable("SessionLink");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Speaker", b =>
                {
                    b.Property<int>("SpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpeakerBio")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SpeakerDesignation")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("SpeakerImage")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SpeakerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("SpeakerId");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Topic", b =>
                {
                    b.Property<int>("TopicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("OrderNo")
                        .HasColumnType("int");

                    b.Property<string>("TopicDescription")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TopicImage")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TopicName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TopicTime")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("TopicId");

                    b.HasIndex("TrackId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("AzureBootCamp.Context.TopicSpeaker", b =>
                {
                    b.Property<int>("TopicSpeakerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SpeakerId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("TopicSpeakerId");

                    b.HasIndex("SpeakerId");

                    b.HasIndex("TopicId");

                    b.ToTable("TopicSpeaker");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Track", b =>
                {
                    b.Property<int>("TrackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TrackName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TrackId");

                    b.ToTable("Track");
                });

            modelBuilder.Entity("AzureBootCamp.Context.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Company Name");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Experience")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Tracks")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.HasKey("UserId");

                    b.HasIndex(new[] { "Email" }, "IX_User")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("AzureBootCamp.Context.SessionLink", b =>
                {
                    b.HasOne("AzureBootCamp.Context.Track", "Track")
                        .WithMany("SessionLinks")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("FK_SessionLink_Track")
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Topic", b =>
                {
                    b.HasOne("AzureBootCamp.Context.Track", "Track")
                        .WithMany("Topics")
                        .HasForeignKey("TrackId")
                        .HasConstraintName("FK_Topic_Track")
                        .IsRequired();

                    b.Navigation("Track");
                });

            modelBuilder.Entity("AzureBootCamp.Context.TopicSpeaker", b =>
                {
                    b.HasOne("AzureBootCamp.Context.Speaker", "Speaker")
                        .WithMany("TopicSpeakers")
                        .HasForeignKey("SpeakerId")
                        .HasConstraintName("FK_TopicSpeaker_Speaker")
                        .IsRequired();

                    b.HasOne("AzureBootCamp.Context.Topic", "Topic")
                        .WithMany("TopicSpeakers")
                        .HasForeignKey("TopicId")
                        .HasConstraintName("FK_TopicSpeaker_Topic")
                        .IsRequired();

                    b.Navigation("Speaker");

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Speaker", b =>
                {
                    b.Navigation("TopicSpeakers");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Topic", b =>
                {
                    b.Navigation("TopicSpeakers");
                });

            modelBuilder.Entity("AzureBootCamp.Context.Track", b =>
                {
                    b.Navigation("SessionLinks");

                    b.Navigation("Topics");
                });
#pragma warning restore 612, 618
        }
    }
}
